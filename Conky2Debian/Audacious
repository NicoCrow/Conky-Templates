# .conkyrc

#   made by Nicholas Crow
#   dreamer.lviv@gmail.com

# set to yes if you want Conky to be forked in the background
background yes

# Use Xft?
use_xft yes

# Xft font when Xft is enabled
xftfont Ubuntu:pixelsize=13
text_buffer_size 2048

# Text alpha when using Xft
xftalpha 0.8

# Update interval in seconds
update_interval 0.25

# This is the number of times Conky will update before quitting.
# Set to zero to run forever.
#total_run_times 0

# Use double buffering (reduces flicker, may not work for everyone)
double_buffer yes

# Create own window instead of using desktop (required in nautilus)
own_window yes

# If own_window is yes, you may use type normal, desktop or override
#dock
own_window_type normal

# Use pseudo transparency with own_window?
own_window_transparent yes

# If own_window_transparent is set to no, you can set the background colour here
#own_window_colour black

# If own_window is yes, these window manager hints may be used
own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager
own_window_argb_visual yes
own_window_argb_value 0

# Minimum size of text area
minimum_size 350 150

#Maximum width
maximum_width 350

# Draw shades?
draw_shades no

# Draw outlines?
draw_outline no

# Draw borders around graphs
draw_graph_borders no

# Draw borders around text
draw_borders no

# Stippled borders?
#stippled_borders 8

# border margins
#border_margin 1

# border width
#border_width 1

# Text alignment, other possible values are commented
#alignment ( top_left | top_right | bottom_left | bottom_right | none | top_middle )
alignment bottom_right

# Gap between borders of screen and text
# same thing as passing -x at command line
gap_x 250
gap_y 0

# Subtract file system buffers from used memory?
no_buffers yes

# set to yes if you want all text to be in uppercase
uppercase no

# Force UTF8? note that UTF8 support required XFT
override_utf8_locale yes

# Add spaces to keep things from moving about? This only affects certain objects.
use_spacer yes

default_color ff6000
#default_shade_color 000000
#default_outline_color 222222

cpu_avg_samples 2
net_avg_samples 2

own_window_argb_value 0
own_window_argb_visual yes
own_window_colour 000000

TEXT
${if_running audacious}
#Audacious Version
${alignc}${exec audtool --version}${font}
#Song Artist, Title & Time
${voffset 30}${offset 5}${exec audtool --current-song-tuple-data artist} - ${exec audtool --current-song-tuple-data title} $alignr ${exec audtool --current-song-output-length} / ${exec audtool --current-song-length}
${offset 5}$audacious_bar
${offset 5}$audacious_status $alignr(${exec audtool --current-song-bitrate-kbps} kbps, ${exec audtool --current-song-frequency-khz} khz, ${exec audtool --current-song-channels}ch)
${offset 5}Playlist Position: $alignr $audacious_playlist_position / $audacious_playlist_length
${offset 5}Volume: $alignr $audacious_main_volume% / 100%
${endif}
#
# ${exec audtool  --get-volume}
# ${exec audtool --playback-status}
# ${exec audtool  --playlist-position}
# ${offset 5}${exec audtool  --playlist-display}
# ${exec audtool --current-song-tuple-data title}
# ${exec audtool --current-song-tuple-data artist}
# ${offset 5}Status: $alignr ${exec audtool --playback-status}
# ${offset 5}Chanels: ${alignr}$color ${exec audtool --current-song-channels}ch
# ${offset 5}Progress: $alignr ${exec audtool --current-song-output-length} / ${exec audtool --current-song-length}
#
# Status: $alignr $audacious_status
# Length: $alignr $audacious_length
# Chanels: $alignr $audacious_channels
# Position: $alignr $audacious_position
# Main Volume: $alignr $audacious_main_volume%/100%
# Playlist Length: $alignr $audacious_playlist_length
# Playlist Position: $alignr $audacious_playlist_position
# Progress: $alignr $audacious_position/$audacious_length
#
# http://crunchbanglinux.blogspot.com/2011/04/audacious.html
# http://manpages.ubuntu.com/manpages/precise/man1/audtool2.1.html